<?xml version="1.0" encoding="UTF-8"?>

<project name="${projectName} - AIR for iOS Build" basedir="." default="00. [package ipa for debug]">

	<!-- PROJECT SETTINGS -->
	<property file="ios.properties" />
	<property file="../.settings/com.powerflasher.fdt.core.prefs" />
	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
          <pathelement location="${lib.dir}/ant-contrib-1.0b3.jar"/>
      </classpath>
    </taskdef>

	<!-- START THE PARTY -->
	<target name="00. [package ipa for debug]">
		
		<input message="certificate password:" addproperty="certPassword" />
		<fdt.invoke.launchConfiguration file="../.settings/launch/${projectName} [WIRELESS DEBUG on SIMULATOR].launch" mode="debug" />
		
		<!-- checks for the SWF every 200 milliseconds, then timeout -->
		<waitfor maxwait="10" maxwaitunit="second" checkevery="200" >
			<resourceexists>
			  <file file="${basedir}/${deploy.dir}/${deploy.swf}"/>
			</resourceexists>
		</waitfor>
		<antcall target="[check-SWF-exists]" />	
			
	</target>
	
	<!-- make sure that the SWF is there - if there use it, otherwise echo ERROR -->
	<target name="[check-SWF-exists]">
		<if>
			 <available file="${basedir}/${deploy.dir}/${deploy.swf}" />
	      <then>
	      		<antcall target="killADL" />	
	      		<antcall target="01. [package]" />	
				<antcall target="02. [uninstall.previous]" />	
				<antcall target="03. [install.on.simulator]" />	
	      		<antcall target="killADL" />	
				<antcall target="04. [launch.on.simulator]" />
	      		<antcall target="killADL" />	
	      		<delete file="${deploy.dir}/${deploy.swf}" />
	      </then>
	      <else>
	      	<echo> ********** [ TIMEOUT ERROR: SWF can not be found ] ********** </echo>
	      </else>
	    </if>  
	</target>

	<target name="01. [package]">
		<mkdir dir="${publish.dir}"/>
		
		<java jar="${air_3.3sdk}/${adt}" fork="true" failonerror="true">
			<arg value="-package" />
			<arg value="-target" />
			<arg value="ipa-test-interpreter-simulator" />
			<!-- provisioning -->
			<arg value="-provisioning-profile" />
			<arg value="../${com.powerflasher.fdt.core.mobile.iOS.SIGNATURE.PROVISIONING.FILE}" />
			<!-- p12 -->
			<arg value="-keystore" />
			<arg value="../${com.powerflasher.fdt.core.mobile.iOS.SIGNATURE.CERTIFICATE}" />
			<!-- type -->
			<arg value="-storetype" />
			<arg value="PKCS12" />
			<!-- password -->
			<arg value="-storepass" />
			<arg value="${certPassword}" />
			<!-- exported IPA -->
			<arg value="${publish.dir}/${publish.ipa}" />
			<arg value="../${com.powerflasher.fdt.core.mobile.iOS.MOBILE.DESCRIPTOR}" />
			<arg value="-C" />
			<arg value="${deploy.dir}/" />
			<arg value="${deploy.swf}" />
			<!-- AIR 3.3 SDK -->
			<arg value="-platformsdk" />
			<arg value="${user.home}/${simulatorSdk}" />
			<!-- add more assets here -->
		</java>
	</target>
	<!-- UNINSTALL PREVIOUS - if exists, if not fail silently -->
	<target name="02. [uninstall.previous]">
		<java jar="${air_3.3sdk}/${adt}" fork="true" failonerror="false">
			<arg value="-uninstallApp" />
			<arg value="-platform" />
			<arg value="ios" />
			<!-- AIR 3.3 SDK -->
			<arg value="-platformsdk" />
			<arg value="${user.home}/${simulatorSdk}" />
			<arg value="-device" />
			<arg value="ios-simulator" />
			<!-- APP ID -->
			<arg value="-appid" />
			<arg value="${appid}" />
		</java>
	</target>
	<!-- INSTALL ON DEVICE -->
	<target name="03. [install.on.simulator]">
		<mkdir dir="${publish.dir}"/>
		<java jar="${air_3.3sdk}/${adt}" fork="true" failonerror="true">
			<arg value="-installApp" />
			<arg value="-platform" />
			<arg value="ios" />
			<!-- AIR 3.3 SDK -->
			<arg value="-platformsdk" />
			<arg value="${user.home}/${simulatorSdk}" />
			<arg value="-device" />
			<arg value="ios-simulator" />
			<arg value="-package" />
			<!-- IPA -->
			<arg value="${publish.dir}/${publish.ipa}" />
		</java>
	</target>
	<!-- LAUNCH ON DEVICE -->
	<target name="04. [launch.on.simulator]">
		<mkdir dir="${publish.dir}"/>
		<java jar="${air_3.3sdk}/${adt}" fork="true" failonerror="false">
			<arg value="-launchApp" />
			<arg value="-platform" />
			<arg value="ios" />
			<!-- AIR 3.3 SDK -->
			<arg value="-platformsdk" />
			<arg value="${user.home}/${simulatorSdk}" />
			<arg value="-device" />
			<arg value="ios-simulator" />
			<!-- APP ID -->
			<arg value="-appid" />
			<arg value="${appid}" />
		</java>
	</target>
	
	<!-- close ADL viewer, workaround to bypass the compiler -->
	<target name="killADL">
		<exec executable="/bin/bash" >
			<arg line="${lib.dir}/killall-adl" />
		 </exec>
	</target>

</project>